
On your computer, how many times per second does the millisecond timer update?
	1,000 times per second.

Is it possible to determine how many times per second the nanosecond timer updates? If so, how many? If not, why not?
	To determine how many times it updates, you could probably find the average, but it wouldn't be precise. In the code that Professor Jones provided, the nanosecond timer advanced in somewhat similar numbers, not exact, and occasionally dramatically decreased or increased. 

Judging by experiment 4, how long does it appear to take to compute System.nanoTime()?
	The first two numbers are significantly larger, but the majority is around 42 nanoseconds, with occasional variation at 80-82ish.
	
Estimate the precision of your answer above (+/- how many nanoseconds?)
This changes between one or two (+/-) nanoseconds.

How long does it take to compute the square root of the numbers 1 through 10?
Exactly 7375 nanoseconds to compute the square roots.

Estimate the precision of your answer above (+/- how many nanoseconds?)
This range jumps between a variation of thousands

If you repeat the square root test 100x as many times, does the precision improve?
Kind of? Not really.

How could you improve the results (get a more accurate estimate of elapsed time)?
You could add   startTime = System.nanoTime();
        while (System.nanoTime() - startTime < 1000000000) { // empty block
        } to TimingExperiment08 to stabilize the thread prior to running the test.